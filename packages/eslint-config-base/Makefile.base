#
# Esoteric Makefile
#
# For inspiration:
# - https://github.com/plouc/nivo/blob/master/Makefile
# - https://medium.com/@feltner.mj/modern-javascript-builds-with-makefiles-c355ce047962
# - https://github.com/reggi/monorepo/blob/master/Makefile
# - https://github.com/01org/zephyr/blob/master/Makefile

ifeq (, $(shell which yarn))
  $(error "${RED}yarn is not installed. Please install to continue.${RESET}")
endif

########################################################################################################################
#
# HELP
#
########################################################################################################################

# COLORS
RED    = $(shell printf "\33[31m")
GREEN  = $(shell printf "\33[32m")
WHITE  = $(shell printf "\33[37m")
YELLOW = $(shell printf "\33[33m")
RESET  = $(shell printf "\33[0m")

# Add the following 'help' target to your Makefile
# And add help text after each target name starting with '\#\#'
# A category can be added with @category
HELP_HELPER = \
    %help; \
    while(<>) { push @{$$help{$$2 // 'options'}}, [$$1, $$3] if /^([a-zA-Z\-\%]+)\s*:.*\#\#(?:@([0-9]+\s[a-zA-Z\-\%_]+))?\s(.*)$$/ }; \
    print "usage: make [target]\n\n"; \
    for (sort keys %help) { \
    print "${WHITE}$$_:${RESET}\n"; \
    for (@{$$help{$$_}}) { \
    $$sep = " " x (32 - length $$_->[0]); \
    print "  ${YELLOW}$$_->[0]${RESET}$$sep${GREEN}$$_->[1]${RESET}\n"; \
    }; \
    print "\n"; }

# Make does not offer a recursive wildcard function:
rwildcard=$(wildcard $1$2) $(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2))

.DEFAULT_GOAL := help
.PHONY: help
help: ##@0 global Help
	@perl -e '$(HELP_HELPER)' $(MAKEFILE_LIST)

%.ts:
	$(info ${GREEN}Lint and prettify all TypeScript files${RESET})
	-./node_modules/.bin/prettier --parser typescript --write "{src,packages}/**/*.ts"

%.md:
	$(info ${GREEN}Lint and prettify all Markdown files${RESET})
	-./node_modules/.bin/prettier --parser markdown --write "**/*.md"

%.json:
	$(info ${GREEN}Lint and prettify all JSON files${RESET})
	-./node_modules/.bin/prettier --parser json --write "**/*.json"

.PHONY: sort-package-json
sort-package-json: ##@2 lint Sort current package.json
	npx sort-package-json

